/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package charc;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GraphicsEnvironment;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author niuhuan
 */
public class MainFrame extends javax.swing.JFrame {

    private char displayChar = '辉';
    private Font displayFont = new Font("新宋体", Font.PLAIN, 16);
    private int xPosition = 0;
    private int yPosition = 14;
    private JFileChooser fileChooser;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileFilter() {
            @Override
            public boolean accept(File f) {
                return f.isDirectory() || (f.isFile() || f.getName().toLowerCase().endsWith(".fnt"));
            }

            @Override
            public String getDescription() {
                return "FNT FILE";
            }
        });
        fileChooser.setMultiSelectionEnabled(false);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        setLocation(
                (int) (Toolkit.getDefaultToolkit().getScreenSize().getWidth() - getWidth()) / 2,
                (int) (Toolkit.getDefaultToolkit().getScreenSize().getHeight() - getHeight()) / 2
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        previewFramePanel = new javax.swing.JPanel();
        previewPanel = new javax.swing.JPanel(){
            @Override
            public void paint(Graphics g) {
                super.paint(g);
                g.setColor(Color.BLACK);
                g.fillRect(0, 0, getWidth(), getHeight());
                g.setColor(Color.WHITE);
                g.setFont(displayFont);
                g.drawString(new String(new char[]{displayChar}), xPosition, yPosition);
            }
        };
        titleSeparator = new javax.swing.JSeparator();
        fontLabel = new javax.swing.JLabel();
        fontNameComboBox = new javax.swing.JComboBox();
        verSeparator = new javax.swing.JSeparator();
        xPositionLabel = new javax.swing.JLabel();
        xPositionBar = new javax.swing.JSlider();
        yPositionLabel = new javax.swing.JLabel();
        yPositionBar = new javax.swing.JSlider();
        yPositionValueLabel = new javax.swing.JLabel();
        xPositionValueLabel = new javax.swing.JLabel();
        fontSizeLabel = new javax.swing.JLabel();
        fontSizeBar = new javax.swing.JSlider();
        xPositionValueLabel1 = new javax.swing.JLabel();
        mainButton = new javax.swing.JButton();
        generateProgressBar = new javax.swing.JProgressBar();
        paddingBottonPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("C语言字体生成器");

        titleLabel.setText("C语言点阵字库生成器");

        previewFramePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
        previewPanel.setLayout(previewPanelLayout);
        previewPanelLayout.setHorizontalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );
        previewPanelLayout.setVerticalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout previewFramePanelLayout = new javax.swing.GroupLayout(previewFramePanel);
        previewFramePanel.setLayout(previewFramePanelLayout);
        previewFramePanelLayout.setHorizontalGroup(
            previewFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewFramePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        previewFramePanelLayout.setVerticalGroup(
            previewFramePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewFramePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(previewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fontLabel.setText("使用字体:");

        fontNameComboBox.setModel(listFontNames());
        fontNameComboBox.setSelectedItem(displayFont.getName());
        fontNameComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontNameComboBoxItemStateChanged(evt);
            }
        });

        verSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        xPositionLabel.setText("横轴位移:");

        xPositionBar.setMaximum(30);
        xPositionBar.setMinimum(-30);
        xPositionBar.setValue(0);
        xPositionBar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xPositionBarStateChanged(evt);
            }
        });

        yPositionLabel.setText("纵轴位移:");

        yPositionBar.setMaximum(30);
        yPositionBar.setMinimum(-30);
        yPositionBar.setValue(14);
        yPositionBar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                yPositionBarStateChanged(evt);
            }
        });

        yPositionValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        yPositionValueLabel.setText(String.valueOf(yPosition));

        xPositionValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xPositionValueLabel.setText(String.valueOf(xPosition));

        fontSizeLabel.setText("字体大小:");

        fontSizeBar.setMaximum(30);
        fontSizeBar.setMinimum(8);
        fontSizeBar.setValue(displayFont.getSize());
        fontSizeBar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fontSizeBarStateChanged(evt);
            }
        });

        xPositionValueLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xPositionValueLabel1.setText(String.valueOf(displayFont.getSize()));

        mainButton.setText("生成字体");
        mainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainButtonActionPerformed(evt);
            }
        });

        generateProgressBar.setMaximum(0);
        generateProgressBar.setToolTipText("");
        generateProgressBar.setValue(0);

        javax.swing.GroupLayout paddingBottonPanelLayout = new javax.swing.GroupLayout(paddingBottonPanel);
        paddingBottonPanel.setLayout(paddingBottonPanelLayout);
        paddingBottonPanelLayout.setHorizontalGroup(
            paddingBottonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        paddingBottonPanelLayout.setVerticalGroup(
            paddingBottonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleSeparator)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(previewFramePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(verSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(generateProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mainButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(xPositionLabel)
                                    .addComponent(yPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(xPositionBar, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                    .addComponent(yPositionBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(yPositionValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(xPositionValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fontSizeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fontSizeBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(xPositionValueLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fontLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fontNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(paddingBottonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(previewFramePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fontNameComboBox)
                                    .addComponent(fontLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fontSizeBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(xPositionValueLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fontSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(xPositionBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(xPositionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(xPositionValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(yPositionBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yPositionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(yPositionValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mainButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(generateProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paddingBottonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(verSeparator)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void xPositionBarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_xPositionBarStateChanged
        xPositionValueLabel.setText(String.valueOf(xPositionBar.getValue()));
        xPosition = xPositionBar.getValue();
        previewPanel.repaint();
    }//GEN-LAST:event_xPositionBarStateChanged

    private void yPositionBarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_yPositionBarStateChanged
        yPositionValueLabel.setText(String.valueOf(yPositionBar.getValue()));
        yPosition = yPositionBar.getValue();
        previewPanel.repaint();
    }//GEN-LAST:event_yPositionBarStateChanged

    private void fontNameComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fontNameComboBoxItemStateChanged
        displayFont = new Font(fontNameComboBox.getSelectedItem().toString(), Font.PLAIN, fontSizeBar.getValue());
        previewPanel.repaint();
    }//GEN-LAST:event_fontNameComboBoxItemStateChanged

    private void fontSizeBarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fontSizeBarStateChanged
        xPositionValueLabel1.setText(String.valueOf(fontSizeBar.getValue()));
        displayFont = new Font(fontNameComboBox.getSelectedItem().toString(), Font.PLAIN, fontSizeBar.getValue());
        previewPanel.repaint();
    }//GEN-LAST:event_fontSizeBarStateChanged

    private void mainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainButtonActionPerformed
        fontNameComboBox.setEnabled(false);
        fontSizeBar.setEnabled(false);
        xPositionBar.setEnabled(false);
        yPositionBar.setEnabled(false);
        mainButton.setEnabled(false);
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            if (!path.toLowerCase().endsWith(".fnt")) {
                path = path + ".fnt";
            }
            generateFont(path);
        } else {
            fontNameComboBox.setEnabled(true);
            fontSizeBar.setEnabled(true);
            xPositionBar.setEnabled(true);
            yPositionBar.setEnabled(true);
            mainButton.setEnabled(true);
        }
    }//GEN-LAST:event_mainButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fontLabel;
    private javax.swing.JComboBox<String> fontNameComboBox;
    private javax.swing.JSlider fontSizeBar;
    private javax.swing.JLabel fontSizeLabel;
    private javax.swing.JProgressBar generateProgressBar;
    private javax.swing.JButton mainButton;
    private javax.swing.JPanel paddingBottonPanel;
    private javax.swing.JPanel previewFramePanel;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JSeparator titleSeparator;
    private javax.swing.JSeparator verSeparator;
    private javax.swing.JSlider xPositionBar;
    private javax.swing.JLabel xPositionLabel;
    private javax.swing.JLabel xPositionValueLabel;
    private javax.swing.JLabel xPositionValueLabel1;
    private javax.swing.JSlider yPositionBar;
    private javax.swing.JLabel yPositionLabel;
    private javax.swing.JLabel yPositionValueLabel;
    // End of variables declaration//GEN-END:variables

    private ComboBoxModel<String> listFontNames() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<String>();
        GraphicsEnvironment e = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String[] fontNames = e.getAvailableFontFamilyNames();
        for (String fontName : fontNames) {
            model.addElement(fontName);
        }
        return model;
    }

    private void generateFont(final String path) {
        new Thread() {
            @Override
            public void run() {
                super.run();
                try {
                    BufferedOutputStream fos = new BufferedOutputStream(new FileOutputStream(path));
                    generateProgressBar.setMinimum(0);
                    generateProgressBar.setMaximum(0xffff);
                    for (int a = 0; a <= 0xffff; a++) {
                        generateProgressBar.setValue(a);
                        displayChar = (char) a;
                        previewPanel.repaint();
                        BufferedImage bi = new BufferedImage(16, 16, BufferedImage.TYPE_INT_RGB);
                        Graphics graphics = bi.getGraphics();
                        graphics.setFont(displayFont);
                        graphics.drawString(new String(new char[]{displayChar}), xPosition, yPosition);
                        for (int y = 0; y < 16; y++) {
                            int low = 0, height = 0; // 低位和高位
                            for (int x = 0; x < 16; x++) {
                                if ((bi.getRGB(x, y) & 0xff) > 200) {
                                    if (x < 8) {
                                        low = low | (1 << x);
                                    } else {
                                        height = height | (1 << (x - 8));
                                    }
                                }
                            }
                            fos.write(low);
                            fos.write(height);
                        }
                    }
                    fos.close();
                    JOptionPane.showMessageDialog(MainFrame.this, "成功");
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(MainFrame.this, "失败");
                }
                displayChar = '辉';
                previewPanel.repaint();
                fontNameComboBox.setEnabled(true);
                fontSizeBar.setEnabled(true);
                xPositionBar.setEnabled(true);
                yPositionBar.setEnabled(true);
                mainButton.setEnabled(true);
            }
        }.start();
    }
}
